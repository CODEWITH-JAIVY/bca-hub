import React, { useEffect, useState } from 'react';

const Chapter1_IntroAndMemoryManagement = () => {
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    setIsClient(true); // This ensures content renders only on the client
  }, []);

  if (!isClient) {
    return null; // This prevents rendering before the client is ready
  }

  return (
    <div className="p-6">
      {/* UNIT-I Introduction to Operating Systems */}
      <h2 className="text-3xl font-bold mb-6">
        UNIT-I: Introduction to Operating Systems and Memory Management
      </h2>

      {/* Introduction */}
      <h3 className="text-2xl font-semibold mb-4">Introduction</h3>
      <p className="mb-6">
        An Operating System (OS) is system software that manages computer hardware and software resources,
        and provides common services for computer programs. It acts as an intermediary between users and hardware.
      </p>

      {/* What is an Operating System */}
      <h3 className="text-2xl font-semibold mb-2">What is an Operating System?</h3>
      <p className="mb-6">
        An Operating System controls and coordinates the use of hardware among various applications and users.
        It provides a user-friendly environment and handles basic tasks like file management, memory management, process management, and device management.
      </p>

      {/* Types of Operating Systems */}
      <h3 className="text-2xl font-semibold mb-4">Types of Operating Systems</h3>

      <p className="mb-4">
        <strong>Simple Batch Systems:</strong> Jobs are collected and processed in batches without user interaction.
      </p>
      <p className="mb-4">
        <strong>Multi-programmed Batch Systems:</strong> Multiple jobs are loaded into memory, improving CPU utilization.
      </p>
      <p className="mb-4">
        <strong>Time-Sharing Systems:</strong> Multiple users interact with the system simultaneously, with rapid context switching.
      </p>
      <p className="mb-4">
        <strong>Personal Computer Systems:</strong> Designed for individual use, providing user-friendly interfaces and diverse application support.
      </p>
      <p className="mb-4">
        <strong>Parallel Systems:</strong> Multiple CPUs working simultaneously, increasing processing speed and reliability.
      </p>
      <p className="mb-4">
        <strong>Distributed Systems:</strong> Computation is distributed across multiple machines connected via a network.
      </p>
      <p className="mb-8">
        <strong>Real-Time Systems:</strong> Systems that respond to inputs immediately or within a defined time limit, essential for critical applications like flight control.
      </p>

      {/* Memory Management */}
      <h3 className="text-2xl font-semibold mb-4">Memory Management</h3>

      <p className="mb-4">
        <strong>Background:</strong> Memory management is a crucial part of the OS that controls and coordinates the computer's memory,
        assigning portions called blocks to various running programs to optimize overall system performance.
      </p>

      <p className="mb-4">
        <strong>Logical vs Physical Address Space:</strong> Logical addresses are generated by the CPU; physical addresses refer to locations in physical memory.
        The OS and Memory Management Unit (MMU) translate logical addresses to physical ones.
      </p>

      <p className="mb-4">
        <strong>Swapping:</strong> A process where a process is temporarily moved from main memory to disk and brought back later,
        freeing up memory for other processes.
      </p>

      <p className="mb-4"><strong>Contiguous Allocation:</strong> Each process is allocated a single contiguous block of memory.</p>
      
        <ul className="list-disc ml-10 mb-4">
          <li>Advantage: Simple and fast.</li>
          <li>Disadvantage: Leads to external fragmentation.</li>
        </ul>
      

      {/* Other sections... */}

    </div>
  );
};

export default Chapter1_IntroAndMemoryManagement;
